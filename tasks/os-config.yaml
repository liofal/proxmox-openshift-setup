# Setting the timezone
- name: set timezone to Europe/Brussels
  timezone:
    name: Europe/Brussels
# Not using SElinux for the time being
- name: No SELinux, thanks
  selinux:
    state: disabled

- name: Create directories
  file:
    path: "{{ item.name }}"
    state: directory
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { name: /var/www/html/okd4, owner: root, mode: "0755" }
    - { name: /etc/named/zones, owner: root, mode: "0755" }
    - { name: tmp, owner: ansible, mode: "0755" }
    - { name: install_dir, owner: ansible, mode: "0755" }
    - { name: /var/lib/tftpboot/fcos, owner: root, mode: "0755" }
    - { name: /var/lib/tftpboot/pxelinux.cfg, owner: root, mode: "0755" }
    - { name: /var/nfsshare/registry, owner: nobody, mode: "0777" }
    - { name: /etc/dhcp, owner: root, mode: "0755" }

# Need this here, just to make sure we have a working name resolution for packages installation
- name: Overwrite resolv.conf
  template:
    src: templates/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    mode: 0644

# This script will be used to auto-approve CSR during the worker nodes bootstrapping sequence
- name: Copy CSR approval script to the service host
  copy:
    src: files/approve-csr.sh
    dest: approve-csr.sh
    mode: 0755

- name: Enable IPv4 forwarding permanently
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes

- name: Ensure firewalld is installed
  package:
    name: firewalld
    state: present

- name: Ensure firewalld is running
  service:
    name: firewalld
    state: started
    enabled: yes

- name: Detect management interface
  shell: "ip -o -4 addr show | awk '$4 ~ /{{ service.mgmt_ip }}\\// {print $2}' | head -n1"
  register: mgmt_iface_cmd
  changed_when: false

- name: Detect lab interface
  shell: "ip -o -4 addr show | awk '$4 ~ /{{ service.ip }}\\// {print $2}' | head -n1"
  register: lab_iface_cmd
  changed_when: false

- name: Set interface facts
  set_fact:
    service_mgmt_iface: "{{ mgmt_iface_cmd.stdout | trim }}"
    service_lab_iface: "{{ lab_iface_cmd.stdout | trim }}"

- name: Validate detected interfaces
  assert:
    that:
      - service_mgmt_iface | length > 0
      - service_lab_iface | length > 0
    fail_msg: "Unable to detect service node interfaces for NAT configuration"

- name: Assign management interface to external zone
  ansible.posix.firewalld:
    zone: external
    interface: "{{ service_mgmt_iface }}"
    state: enabled
    permanent: yes
    immediate: yes

- name: Enable masquerade on management zone
  ansible.posix.firewalld:
    zone: external
    masquerade: yes
    state: enabled
    permanent: yes
    immediate: yes

- name: Allow OKD ingress ports on management zone
  ansible.posix.firewalld:
    zone: external
    port: "{{ item }}"
    state: enabled
    permanent: yes
    immediate: yes
  loop:
    - 80/tcp
    - 443/tcp
    - 6443/tcp
    - 22623/tcp

- name: Assign lab interface to trusted zone
  ansible.posix.firewalld:
    zone: trusted
    interface: "{{ service_lab_iface }}"
    state: enabled
    permanent: yes
    immediate: yes

- name: Allow lab network forwarding through service node
  ansible.posix.firewalld:
    zone: trusted
    state: enabled
    rich_rule: 'rule family="ipv4" source address="{{ lab_cidr }}" accept'
    permanent: yes
    immediate: yes

- name: Install dnsmasq for PXE/DHCP
  package:
    name: dnsmasq
    state: present

- name: Configure dnsmasq for lab network
  template:
    src: templates/dnsmasq.conf.j2
    dest: /etc/dnsmasq.d/okd.conf
    owner: root
    mode: 0644
  notify:
    - Restart dnsmasq

- name: Ensure dnsmasq is running
  service:
    name: dnsmasq
    state: started
    enabled: yes
